plugins {
    id 'org.springframework.boot' version '2.6.2' apply false
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
}

allprojects {
    apply plugin: "io.spring.dependency-management"


    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = "https://maven.pkg.github.com/sunshower-io/"
            credentials {
                username 'packages'
                password "$repoAccessToken" // in gradle.properties
            }
        }
    }


    dependencyManagement {
        imports {
            mavenBom "io.zephyr.tutorials:zephyr-tutorials:$zephyrVersion"
        }
    }
}

subprojects {
    apply plugin: 'war'
    apply plugin: 'java'


    dependencies {
        compileOnly "io.zephyr:kernel-api"
        [
                'kernel-test',
                'kernel-test-common'
        ].each {
            testImplementation("io.zephyr:$it")
        }
        compileOnly 'org.springframework.boot:spring-boot-starter'

        testImplementation 'org.springframework:spring-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine'

    }

    test {
        useJUnitPlatform()
    }
    task copyArtifacts {
        doLast {
            def version = version
            def baseName = archivesBaseName
            def group = group
            def DIST_DIR = "${rootDir}/dist"
            def SRC_DIR = "${buildDir}/libs"

            ant.mkdir(dir: DIST_DIR)
            ant.copy(todir: DIST_DIR) {
                fileset(dir: SRC_DIR,
                        includes: "**/*.war")
            }
        }
    }

    afterEvaluate {
        def warTask = tasks.find { it.name == 'war' }
        if (warTask) {
            warTask.finalizedBy(copyArtifacts)
        }
    }
}

